#!/usr/bin/env python3
#
# Created from Bob Rathbone's Raspberry Pi Rotary Test Encoder Class
#Â Site : http://www.bobrathbone.com
#
#

# import sys

import time
import RPIO

from lib.states import State_A
#from lib.states import State_B
#from lib.states import State_C
#from lib.states import State_D
#from lib.states import State_E

# TO DO: read the mode list from appropriate conf file
MODES_LIST = ['SDHC']

STATE_A = State_A()
#STATE_B = State_B()
#STATE_C = State_C()
#STATE_D = State_D()
#STATE_E = State_E()

global current_state

current_state = STATE_A.clone()

def socket_callback(socket, val):
    print("socket %s: '%s'" % (socket.fileno(), val))
    socket.send("echo: %s\n" % val)

# TCP socket server callback on port 8080
RPIO.add_tcp_callback(8080, socket_callback)

print("Waiting for TCP interrupts...\n")

# Blocking main epoll loop
RPIO.wait_for_interrupts()
